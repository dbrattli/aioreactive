[tool.poetry]
name = "aioreactive"
version = "0.0.0" # NOTE: will be updated by publish script
description = "sync/await Reactive Tools for Python 3.10+"
readme = "README.md"
authors = ["Dag Brattli <dag@brattli.net>", "BÃ¸rge Lanes"]
license = "MIT License"
repository = "https://github.com/dbrattli/aioreactive"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "aioreactive" }, { include = "aioreactive/py.typed" }]

[tool.poetry.dependencies]
python = ">= 3.10, < 4"
typing-extensions = "^4.1.1"
Expression = "^5.3.0"
reactivex = "^4.0.0"

[tool.poetry.dev-dependencies]
pytest-asyncio = "^0.24.0"
pytest = "^8.3.3"
coverage = "^6.3.2"
coveralls = "^3.3.1"
pre-commit = "^3.8.0"
dunamai = "^1.9.0"

[tool.ruff]
# Keep in sync with .pre-commit-config.yaml
line-length = 120
# D100: Missing docstring in public module
# D104: Missing docstring in public package
# D105: Missing docstring in magic method
lint.ignore = ["D100", "D101", "D102", "D103", "D105", "D107"]
lint.select = ["D", "E", "W", "F", "I", "T", "RUF", "TID", "UP"]
exclude = ["tests", "docs", "examples"]
target-version = "py310"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
lines-after-imports = 2
known-third-party = ["pytest"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "strict"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
